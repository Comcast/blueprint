apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'maven'
apply plugin: 'signing'

android {
    compileSdkVersion 29

    defaultConfig {
        minSdkVersion 17
        targetSdkVersion 29
        versionCode 1
        versionName rootProject.publishVersion

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        project.archivesBaseName = "$rootProject.artifactPrefix-library-$versionName"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    androidTestImplementation('androidx.test.espresso:espresso-core:3.1.0', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    implementation 'androidx.appcompat:appcompat:1.0.0',
            'androidx.recyclerview:recyclerview:1.0.0'

    testImplementation 'junit:junit:4.12'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
}

repositories {
    mavenCentral()
}

task sourceJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier "source"
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    classpath += configurations.implementation
    destinationDir = file("../javadoc/")
    failOnError false
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from tasks.javadoc.destinationDir
}

//Creating sources with comments
task androidSourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.srcDirs
}

artifacts {
//    archives javadocJar
    archives androidSourcesJar
}

signing {
    sign configurations.archives
}

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: sonatypeUsername, password: sonatypePassword)
            }

            pom.project {
                groupId rootProject.groupId
                name "$rootProject.projectName Library"
                version rootProject.publishVersion
                packaging 'aar'
                description 'Blueprint is a compact framework for constructing mvp architectures in Android within a scrollable, multi-view-type list UI'
                artifactId "$rootProject.artifactPrefix-library"
                url 'https://github.com/Comcast/blueprint'

                scm {
                    url 'scm:git@github.com:Comcast/blueprint.git'
                    connection 'scm:git@github.com:Comcast/blueprint.git'
                    developerConnection 'scm:git@github.com:Comcast/blueprint.git'
                }

                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        distribution 'repo'
                    }
                }

                developers {
                    developer {
                        id 'dapp'
                        name 'Mark Dappollone'
                    }
                }
            }
        }
    }
}